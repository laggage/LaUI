<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:LaUI.Control"
                    xmlns:conv="clr-namespace:LaUI.Converter"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <Style x:Key="IconToggleButtonBaseStyle" 
           TargetType="{x:Type local:IconToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Green" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="2.2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="IconPosition" Value="Left"/>
        <Setter Property="Padding" Value="5 3.5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type local:IconToggleButton}" 
           BasedOn="{StaticResource IconToggleButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IconToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=CornerRadius,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            HorizontalAlignment ="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                            Padding="{TemplateBinding Padding}">
                        <DockPanel>
                            <DockPanel.Resources>
                                <conv:DockPosReverseConverter x:Key="DockPosReverseConverter"/>
                            </DockPanel.Resources>

                            <ContentPresenter x:Name="IconPresenter"
                                              Content="{Binding Path=Icon, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:IconToggleButton}}}"
                                              DockPanel.Dock="{Binding Path=IconPosition,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:IconToggleButton}}}"
                                              Visibility="{Binding Path=IconVisibility, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:IconToggleButton}}}"/>

                            <ContentPresenter x:Name="Content" 
                                              DockPanel.Dock="{Binding Path=IconPosition,Converter={StaticResource DockPosReverseConverter}, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:IconToggleButton}}}" 
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropdownIconToggleButton" 
           BasedOn="{StaticResource IconToggleButtonBaseStyle}"
           TargetType="{x:Type local:IconToggleButton}">
        <!--<Setter Property="Icon" >
            <Setter.Value>
                <iconPacks:PackIconFontAwesome Kind="CaretRightSolid" 
                                               RenderTransformOrigin="0.5 0.5">
                    <iconPacks:PackIconFontAwesome.RenderTransform>
                        <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                    </iconPacks:PackIconFontAwesome.RenderTransform>
                </iconPacks:PackIconFontAwesome>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IconToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=CornerRadius,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            HorizontalAlignment ="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                            Padding="{TemplateBinding Padding}">
                        <DockPanel>
                            <DockPanel.Resources>
                                <conv:DockPosReverseConverter x:Key="DockPosReverseConverter"/>
                            </DockPanel.Resources>

                            <iconPacks:PackIconFontAwesome x:Name="Icon"
                                                           Kind="CaretRightSolid"
                                                           BorderThickness="0"
                                                           Foreground="{TemplateBinding Foreground}"
                                                           DockPanel.Dock="{Binding Path=IconPosition, RelativeSource={RelativeSource  Mode=FindAncestor,AncestorType={x:Type local:IconToggleButton}}}"
                                                           Visibility="{TemplateBinding IconVisibility}"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           RenderTransformOrigin="0.5 0.5">
                                <iconPacks:PackIconFontAwesome.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="0"/>
                                        <ScaleTransform ScaleX="0.7" ScaleY="0.6"/>
                                    </TransformGroup>
                                </iconPacks:PackIconFontAwesome.RenderTransform>
                            </iconPacks:PackIconFontAwesome>

                            <!--<ContentPresenter x:Name="Icon"
                                              Content="{Binding Path=Icon, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:IconToggleButton}}}"
                                              DockPanel.Dock="{Binding Path=IconPosition,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:IconToggleButton}}}"
                                              Visibility="{Binding Path=IconVisibility, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:IconToggleButton}}}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              RenderTransformOrigin="0.5 0.5">
                                <ContentPresenter.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="0" />
                                    </TransformGroup>
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>-->

                            <ContentPresenter x:Name="Content" 
                                              DockPanel.Dock="{Binding Path=IconPosition,Converter={StaticResource DockPosReverseConverter}, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:IconToggleButton}}}" 
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </DockPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Icon"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"
                                                         Duration="0:0:0.15"
                                                         To="45">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Icon"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"
                                                         Duration="0:0:0.15"
                                                         To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IconPosition" Value="Left">
                            <Setter TargetName="Icon" Property="Margin" Value="0 0 5 0"/>
                        </Trigger>

                        <Trigger Property="IconPosition" Value="Right">
                            <Setter TargetName="Icon" Property="Margin" Value="5 0 0 0"/>
                            <Setter TargetName="Icon" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>